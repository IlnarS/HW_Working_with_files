В следующем примере происходит копирование данных из файла test.txt в test2.txt на диске D. 
Копирование файла
Библиотека под названием shutil включает в себя несколько полезных функций для создания копий 
объектов на жестком диске.
Чтобы быстро скопировать файл в исходный каталог, стоит воспользоваться методом copyfile, 
предварительно подключив модуль shutil. 
В роли первого аргумента здесь выступает оригинальный документ, 
в то время как вторым параметром нужно поставить предполагаемый новый файл. 
Стоит учитывать, что копируется только содержимое, но не метаданные. 
Функция copyfile также возвращает адрес созданного документа.
import shutil
shutil.copyfile("D:\\test.txt", "D:\\test2.txt")
Встроенный метод copy из модуля shutil позволяет в Python копировать файл в указанную папку, 
сохраняя при этом его изначальное имя. 
Приведенный ниже пример кода демонстрирует копирование информации из test.txt в объект, 
который находится на диске D в каталоге под названием folder. 
Как и в предыдущем случае с функцией copyfile, переносятся только внутренние данные, 
но не сведения о дате создания и редактирования документа.
import shutil
shutil.copy("D:\\test.txt", "D:\\folder")
Чтобы полностью скопировать информацию из текстового файла, 
а также все сведения о нем, необходимо воспользоваться готовым методом copy2. 
Способ его применения такой же, как и в случае с функцией copy. 
На месте первого параметра здесь размещается адрес изначального файла, 
в то время как второй аргумент сообщает локацию и название нового документа. 
Ниже показан пример, 
где содержимое и метаданные копируются в test2.txt из папки folder.
import shutil
shutil.copy2("D:\\test.txt", "D:\\folder\\test2.txt")